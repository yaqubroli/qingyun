* Update: I've reached an impasse

As it turns out, the reason that Tongxin's kernels boot on the Kirin 9000c but the ones I compile don't might have nothing to do with device trees. There is actually [[https://lkml.iu.edu/hypermail/linux/kernel/1506.0/03066.html][no support for embedding device trees in a kernel image on arm64]] and so whatever is different between Tongxin's kernel and mine, it's not the device tree.

I will buy a null modem cable and investigate (I hope the 9-pin port on the back works for kernel debugging) and then report back. Again, any ARM/embedded experts who are familiar with this, get in contact if you can provide some guidance.

** 中文版

事实证明，统信的内核能够在麒麟 9000c 上启动，而我编译的内核却不能，原因可能与设备树无关。实际上，在 arm64 架构上，内核镜像并不支持嵌入设备树，所以统信 的内核和我的内核之间的区别，并不是设备树的问题。

我会买一根空调制解调器线，进行调查（老天爷保佑背后的 9 针串口能用于内核调试），然后再汇报进展。如果有哪位道友对此熟悉，请提供你所掌握的信息。



* Linux on Huawei Qingyun W515x

** Right now, this repo contains:

- Device tree extracted from W515x running Gentoo, but with Tongxin UOS 1070/eagle kernel
  - This tree has to be corrected with proper voltage information since ~dtc~ extracts malformed voltage data for the CPUs
- Script for extracting voltage data

** Ideally I want:

- Some sort of makefile/script for compiling a kernel that /will/ run
- Releases of contemporary standard linux pushed regularly, but infrequently (monthly)

*** Note for Chinese readers:

I am not Chinese, and Chinese is not my first language. As a result, I probably lack access to online wisdom regarding this chipset. The only relevant info I could find was from [[https://blog.umu618.com/2024/07/07/umutech-install-debian-12-on-w515/][UMU's blog]], which got me running Gentoo, but with an outdated kernel. Thanks UMU though!

* 华为擎云 W515x 上运行 Linux

** 当前仓库包含：
- 从运行 Gentoo 的 W515x 中提取的设备树，但内核使用的是统信 UOS 1070/eagle
  - 该设备树需要修正电压信息，因为 ~dtc~ 工具提取的 CPU 电压数据格式错误
- 提取电压数据的脚本

** 理想目标：
- 一个用于编译可运行内核的 Makefile 或脚本
- 定期（如每月）发布标准 Linux 的更新版本（频率不高）

** 给中国读者的说明：
我不是中国人，中文也不是我的母语。因此，我可能无法获取关于该芯片组的中文网络资料。我唯一找到的有用信息来自 UMU 的博客，它帮助我运行了 Gentoo，但内核版本较旧。  
仍然感谢 UMU！
